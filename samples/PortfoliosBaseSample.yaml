portfoliosbase: 
    addCustomFieldSettingForPortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.portfolios.addCustomFieldSettingForPortfolio(portfolioGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    addItemForPortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.portfolios.addItemForPortfolio(portfolioGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    addMembersForPortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.portfolios.addMembersForPortfolio(portfolioGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    createPortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        Portfolio result = client.portfolios.createPortfolio()
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    deletePortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.portfolios.deletePortfolio(portfolioGid)
            .option("pretty", true)
            .execute();
    getItemsForPortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        List<Project> result = client.portfolios.getItemsForPortfolio(portfolioGid)
            .option("pretty", true)
            .execute();
    getPortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        Portfolio result = client.portfolios.getPortfolio(portfolioGid)
            .option("pretty", true)
            .execute();
    getPortfolios: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        List<Portfolio> result = client.portfolios.getPortfolios(owner, workspace)
            .option("pretty", true)
            .execute();
    removeCustomFieldSettingForPortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.portfolios.removeCustomFieldSettingForPortfolio(portfolioGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    removeItemForPortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.portfolios.removeItemForPortfolio(portfolioGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    removeMembersForPortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.portfolios.removeMembersForPortfolio(portfolioGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    updatePortfolio: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        Portfolio result = client.portfolios.updatePortfolio(portfolioGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
