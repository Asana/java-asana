projectsbase: 
    addCustomFieldSettingForProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        CustomFieldSetting result = client.projects.addCustomFieldSettingForProject(projectGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    addFollowersForProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.projects.addFollowersForProject(projectGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    addMembersForProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.projects.addMembersForProject(projectGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    createProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        Project result = client.projects.createProject()
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    createProjectForTeam: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        Project result = client.projects.createProjectForTeam(teamGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    createProjectForWorkspace: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        Project result = client.projects.createProjectForWorkspace(workspaceGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    deleteProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.projects.deleteProject(projectGid)
            .option("pretty", true)
            .execute();
    duplicateProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        Job result = client.projects.duplicateProject(projectGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    getProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        Project result = client.projects.getProject(projectGid)
            .option("pretty", true)
            .execute();
    getProjects: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        List<Project> result = client.projects.getProjects(archived, team, workspace)
            .option("pretty", true)
            .execute();
    getProjectsForTask: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        List<Project> result = client.projects.getProjectsForTask(taskGid)
            .option("pretty", true)
            .execute();
    getProjectsForTeam: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        List<Project> result = client.projects.getProjectsForTeam(teamGid, archived)
            .option("pretty", true)
            .execute();
    getProjectsForWorkspace: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        List<Project> result = client.projects.getProjectsForWorkspace(workspaceGid, archived)
            .option("pretty", true)
            .execute();
    getTaskCountsForProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.projects.getTaskCountsForProject(projectGid)
            .option("pretty", true)
            .execute();
    removeCustomFieldSettingForProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.projects.removeCustomFieldSettingForProject(projectGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    removeFollowersForProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.projects.removeFollowersForProject(projectGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    removeMembersForProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        JsonElement result = client.projects.removeMembersForProject(projectGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
    updateProject: >-
        import com.asana.Client;


        Client client = Client.accessToken("PERSONAL_ACCESS_TOKEN");


        Project result = client.projects.updateProject(projectGid)
            .data("field", "value")
            .data("field", "value")
            .option("pretty", true)
            .execute();
