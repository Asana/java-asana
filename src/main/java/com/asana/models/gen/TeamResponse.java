/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.asana.models.gen;

import java.util.Objects;
import java.util.Arrays;
import com.asana.models.gen.TeamCompact;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TeamResponse
 */


public class TeamResponse extends TeamCompact {
  @SerializedName("description")
  private String description = null;

  @SerializedName("html_description")
  private String htmlDescription = null;

  @SerializedName("organization")
  private Object organization = null;


  public TeamResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * [Opt In](#input-output-options). The description of the team. 
   * @return description
  **/
  @Schema(example = "All developers should be members of this team.", description = "[Opt In](#input-output-options). The description of the team. ")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TeamResponse htmlDescription(String htmlDescription) {
    this.htmlDescription = htmlDescription;
    return this;
  }

   /**
   * [Opt In](#input-output-options). The description of the team with formatting as HTML. *Note: This field is under active migration—please see our [blog post](https://developers.asana.com/docs/#rich-text) for more information.* 
   * @return htmlDescription
  **/
  @Schema(example = "<body><em>All</em> developers should be members of this team.</body>", description = "[Opt In](#input-output-options). The description of the team with formatting as HTML. *Note: This field is under active migration—please see our [blog post](https://developers.asana.com/docs/#rich-text) for more information.* ")
  public String getHtmlDescription() {
    return htmlDescription;
  }

  public void setHtmlDescription(String htmlDescription) {
    this.htmlDescription = htmlDescription;
  }

  public TeamResponse organization(Object organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @Schema(description = "")
  public Object getOrganization() {
    return organization;
  }

  public void setOrganization(Object organization) {
    this.organization = organization;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamResponse teamResponse = (TeamResponse) o;
    return Objects.equals(this.description, teamResponse.description) &&
        Objects.equals(this.htmlDescription, teamResponse.htmlDescription) &&
        Objects.equals(this.organization, teamResponse.organization) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, htmlDescription, organization, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    htmlDescription: ").append(toIndentedString(htmlDescription)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
