/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.asana.models.gen;

import java.util.Objects;
import java.util.Arrays;
import com.asana.models.gen.UserCompact;
import com.asana.models.gen.UserTaskListResponse;
import com.asana.models.gen.WorkspaceCompact;
import com.asana.models.gen.WorkspaceMembershipCompact;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import com.asana.models.GenResource;
/**
 * WorkspaceMembershipResponse
 */


public class WorkspaceMembershipResponse extends WorkspaceMembershipCompact {
  @SerializedName("user_task_list")
  private UserTaskListResponse userTaskList = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  @SerializedName("is_admin")
  private Boolean isAdmin = null;

  @SerializedName("is_guest")
  private Boolean isGuest = null;

  public WorkspaceMembershipResponse userTaskList(UserTaskListResponse userTaskList) {
    this.userTaskList = userTaskList;
    return this;
  }

   /**
   * Get userTaskList
   * @return userTaskList
  **/
  @Schema(description = "")
  public UserTaskListResponse getUserTaskList() {
    return userTaskList;
  }

  public void setUserTaskList(UserTaskListResponse userTaskList) {
    this.userTaskList = userTaskList;
  }

   /**
   * Reflects if this user still a member of the workspace.
   * @return isActive
  **/
  @Schema(description = "Reflects if this user still a member of the workspace.")
  public Boolean isIsActive() {
    return isActive;
  }

   /**
   * Reflects if this user is an admin of the workspace.
   * @return isAdmin
  **/
  @Schema(description = "Reflects if this user is an admin of the workspace.")
  public Boolean isIsAdmin() {
    return isAdmin;
  }

   /**
   * Reflects if this user is a guest of the workspace.
   * @return isGuest
  **/
  @Schema(description = "Reflects if this user is a guest of the workspace.")
  public Boolean isIsGuest() {
    return isGuest;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkspaceMembershipResponse workspaceMembershipResponse = (WorkspaceMembershipResponse) o;
    return Objects.equals(this.userTaskList, workspaceMembershipResponse.userTaskList) &&
        Objects.equals(this.isActive, workspaceMembershipResponse.isActive) &&
        Objects.equals(this.isAdmin, workspaceMembershipResponse.isAdmin) &&
        Objects.equals(this.isGuest, workspaceMembershipResponse.isGuest) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userTaskList, isActive, isAdmin, isGuest, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkspaceMembershipResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    userTaskList: ").append(toIndentedString(userTaskList)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    isGuest: ").append(toIndentedString(isGuest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
