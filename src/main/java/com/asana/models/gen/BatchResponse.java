/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.asana.models.gen;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import com.asana.models.GenResource;
/**
 * A response object returned from a batch request.
 */
@Schema(description = "A response object returned from a batch request.")

public class BatchResponse extends GenResource {
  @SerializedName("status_code")
  private Integer statusCode = null;

  @SerializedName("headers")
  private Object headers = null;

  @SerializedName("body")
  private Object body = null;

  public BatchResponse statusCode(Integer statusCode) {
    this.statusCode = statusCode;
    return this;
  }

   /**
   * The HTTP status code that the invoked endpoint returned.
   * @return statusCode
  **/
  @Schema(example = "200", description = "The HTTP status code that the invoked endpoint returned.")
  public Integer getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(Integer statusCode) {
    this.statusCode = statusCode;
  }

  public BatchResponse headers(Object headers) {
    this.headers = headers;
    return this;
  }

   /**
   * A map of HTTP headers specific to this result. This is primarily used for returning a &#x60;Location&#x60; header to accompany a &#x60;201 Created&#x60; result.  The parent HTTP response will contain all common headers.
   * @return headers
  **/
  @Schema(example = "{\"location\":\"/tasks/1234\"}", description = "A map of HTTP headers specific to this result. This is primarily used for returning a `Location` header to accompany a `201 Created` result.  The parent HTTP response will contain all common headers.")
  public Object getHeaders() {
    return headers;
  }

  public void setHeaders(Object headers) {
    this.headers = headers;
  }

  public BatchResponse body(Object body) {
    this.body = body;
    return this;
  }

   /**
   * The JSON body that the invoked endpoint returned.
   * @return body
  **/
  @Schema(example = "{\"data\":{\"gid\":\"1967\",\"completed\":false,\"name\":\"Hello, world!\",\"notes\":\"How are you today?\"}}", description = "The JSON body that the invoked endpoint returned.")
  public Object getBody() {
    return body;
  }

  public void setBody(Object body) {
    this.body = body;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchResponse batchResponse = (BatchResponse) o;
    return Objects.equals(this.statusCode, batchResponse.statusCode) &&
        Objects.equals(this.headers, batchResponse.headers) &&
        Objects.equals(this.body, batchResponse.body);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statusCode, headers, body);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchResponse {\n");
    
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
