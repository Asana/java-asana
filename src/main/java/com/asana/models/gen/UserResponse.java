/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.asana.models.gen;

import java.util.Objects;
import java.util.Arrays;
import com.asana.models.gen.UserCompact;
import com.asana.models.gen.UserResponsePhoto;
import com.asana.models.gen.WorkspaceCompact;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * UserResponse
 */


public class UserResponse extends UserCompact {
  @SerializedName("email")
  private String email = null;

  @SerializedName("photo")
  private UserResponsePhoto photo = null;

  @SerializedName("workspaces")
  private List<WorkspaceCompact> workspaces = null;


   /**
   * The user’s email address.
   * @return email
  **/
  @Schema(example = "gsanchez@example.com", description = "The user’s email address.")
  public String getEmail() {
    return email;
  }

  public UserResponse photo(UserResponsePhoto photo) {
    this.photo = photo;
    return this;
  }

   /**
   * Get photo
   * @return photo
  **/
  @Schema(description = "")
  public UserResponsePhoto getPhoto() {
    return photo;
  }

  public void setPhoto(UserResponsePhoto photo) {
    this.photo = photo;
  }

   /**
   * Workspaces and organizations this user may access. Note\\: The API will only return workspaces and organizations that also contain the authenticated user.
   * @return workspaces
  **/
  @Schema(description = "Workspaces and organizations this user may access. Note\\: The API will only return workspaces and organizations that also contain the authenticated user.")
  public List<WorkspaceCompact> getWorkspaces() {
    return workspaces;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserResponse userResponse = (UserResponse) o;
    return Objects.equals(this.email, userResponse.email) &&
        Objects.equals(this.photo, userResponse.photo) &&
        Objects.equals(this.workspaces, userResponse.workspaces) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, photo, workspaces, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    photo: ").append(toIndentedString(photo)).append("\n");
    sb.append("    workspaces: ").append(toIndentedString(workspaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
