/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.asana.models.gen;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * A collection of rich text that will be displayed as a preview to another app.  This is read-only except for a small group of whitelisted apps.
 */
@Schema(description = "A collection of rich text that will be displayed as a preview to another app.  This is read-only except for a small group of whitelisted apps.")

public class Preview {
  @SerializedName("fallback")
  private String fallback = null;

  @SerializedName("footer")
  private String footer = null;

  @SerializedName("header")
  private String header = null;

  @SerializedName("header_link")
  private String headerLink = null;

  @SerializedName("html_text")
  private String htmlText = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("title_link")
  private String titleLink = null;

  public Preview fallback(String fallback) {
    this.fallback = fallback;
    return this;
  }

   /**
   * Some fallback text to display if unable to display the full preview.
   * @return fallback
  **/
  @Schema(example = "Greg: Great! I like this idea.\\n\\nhttps//a_company.slack.com/archives/ABCDEFG/12345678", description = "Some fallback text to display if unable to display the full preview.")
  public String getFallback() {
    return fallback;
  }

  public void setFallback(String fallback) {
    this.fallback = fallback;
  }

  public Preview footer(String footer) {
    this.footer = footer;
    return this;
  }

   /**
   * Text to display in the footer.
   * @return footer
  **/
  @Schema(example = "Mar 17, 2019 1:25 PM", description = "Text to display in the footer.")
  public String getFooter() {
    return footer;
  }

  public void setFooter(String footer) {
    this.footer = footer;
  }

  public Preview header(String header) {
    this.header = header;
    return this;
  }

   /**
   * Text to display in the header.
   * @return header
  **/
  @Schema(example = "Asana for Slack", description = "Text to display in the header.")
  public String getHeader() {
    return header;
  }

  public void setHeader(String header) {
    this.header = header;
  }

  public Preview headerLink(String headerLink) {
    this.headerLink = headerLink;
    return this;
  }

   /**
   * Where the header will link to.
   * @return headerLink
  **/
  @Schema(example = "https://asana.comn/apps/slack", description = "Where the header will link to.")
  public String getHeaderLink() {
    return headerLink;
  }

  public void setHeaderLink(String headerLink) {
    this.headerLink = headerLink;
  }

  public Preview htmlText(String htmlText) {
    this.htmlText = htmlText;
    return this;
  }

   /**
   * HTML formatted text for the body of the preview.
   * @return htmlText
  **/
  @Schema(example = "<body>Great! I like this idea.</body>", description = "HTML formatted text for the body of the preview.")
  public String getHtmlText() {
    return htmlText;
  }

  public void setHtmlText(String htmlText) {
    this.htmlText = htmlText;
  }

  public Preview text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Text for the body of the preview.
   * @return text
  **/
  @Schema(example = "Great! I like this idea.", description = "Text for the body of the preview.")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Preview title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Text to display as the title.
   * @return title
  **/
  @Schema(example = "Greg", description = "Text to display as the title.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Preview titleLink(String titleLink) {
    this.titleLink = titleLink;
    return this;
  }

   /**
   * Where to title will link to.
   * @return titleLink
  **/
  @Schema(example = "https://asana.slack.com/archives/ABCDEFG/12345678", description = "Where to title will link to.")
  public String getTitleLink() {
    return titleLink;
  }

  public void setTitleLink(String titleLink) {
    this.titleLink = titleLink;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Preview preview = (Preview) o;
    return Objects.equals(this.fallback, preview.fallback) &&
        Objects.equals(this.footer, preview.footer) &&
        Objects.equals(this.header, preview.header) &&
        Objects.equals(this.headerLink, preview.headerLink) &&
        Objects.equals(this.htmlText, preview.htmlText) &&
        Objects.equals(this.text, preview.text) &&
        Objects.equals(this.title, preview.title) &&
        Objects.equals(this.titleLink, preview.titleLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fallback, footer, header, headerLink, htmlText, text, title, titleLink);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Preview {\n");
    
    sb.append("    fallback: ").append(toIndentedString(fallback)).append("\n");
    sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    headerLink: ").append(toIndentedString(headerLink)).append("\n");
    sb.append("    htmlText: ").append(toIndentedString(htmlText)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    titleLink: ").append(toIndentedString(titleLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
